# This is an example of State-of-War Remastered game map extra information file.
#
# The file is in custom ini format.
#
# [Blocks]
# and
# Key = Value
# is available as usual.
# Sublayer is also allowed :
# Key.SubKey = Value
#
# Use # to comment, no characters after the # symbol including itself is loaded.
#
# Spaces are ignored; use quotes to reference string that contains space, e.g.
# ["String with space"]
# or 
# "Key with space" = ""
#
# Escaping is not allowed.
#
# This file is for main map registering, maps should be registered by this file.
# The corresponding map data are described by file name (Mxx).
#
# Some extra information (key-value pair *and* block) can be add to anywhere.


###############################################################################
# Overall config.
###############################################################################
[global]
map_id = 12500
map_terrain = tile.127    # Index to terrain maps.
map_visiable = vis.127    # Index to map mask.


###############################################################################
# Single-player mode config.
###############################################################################
[sp]
available = 1
sp.player = 1               # Player control sp.1.
difficulty = 3

[sp.0]
is_neutral = 1;             # Set this player to be neutral (white).
ai = 0                      # It is possible to let player control neutral camp, but there are no productions and attacks.

[sp.1]
camp = 1                    # Camps are used to determine allies.

ai = player_control         # We see player's controlling as an AI. This is the default value of key "ai".
money = 12500               # Money at the beginning.
research = 0                # Beginning value default is 0.
max_money = 1073741824      
max_research = 2000
max_advanced_research = 1000

[sp.2]
camp = 1
ai = sp.ai.normal           # Index to AI definition.
money = 1000
research = 1000

[sp.3]
ai = sp.ai.advanced
max_money = 0
production_acceleration = 2 # Example of a custom property.


###############################################################################
# Multi-player mode config.
###############################################################################

[mp]
available = 1

[mp.1]
camp = 1
money = 10000
max_money = 10000

[mp.2]
camp = 1
money = 10000
max_money = 10000

[mp.3]
camp = 2
ai = mp.ai.normal       # AI is allowed in multi-player mode.
max_money = 10000


###############################################################################
# Map resources config.
###############################################################################

[building.99]
sp = 1              # Default true.
mp = 0              # Default true.
difficulty = 3      # Only when difficulty = 3 this building exists.
                    # Without specifying difficulty it will exist in any difficulty.
x = 10
y = 16
type = factory_3
owner = 1                       # Player 1 owns it.
production.0 = artillary_1
upgrade.0 = 2                   # Can use upgrade twice
advanced_upgrade.0 = 1          # Can use advanced upgrade
satellite_defence = 1
id = super_cannon               # This is a custom property and is not necessary. It can be used in some scripts.

[building.98]
x = 19
y = 28
owner = 1
type = hq
export.0 = af_bomber
upgrade.0 = 1
export.9 = af_carry_all         # Production from 1 to 5 can be reserved.
upgrade.9 = 1
hp = 1                          # hp = 1 means full of hp; hp < 0 means destroy immediately. Default 1.

[unit.13372]
x = 1177
y = 2719
type = rogon
owner = 1
hp = 2500
id = escort_target				# As stated above this is a custom property. It can be used in some scripts such as escorting missions.

[unit.13373]
x = 1177
y = 2719
type = kodiak
owner = 1
hp = 1000


###############################################################################
# Events config.
###############################################################################

[event.11]                              # You can give it arbitrary id as long as all event ids are distinct.
sp = 1
mp = 0
condition = time_out                    # Index to condition judgement script.
action = reinforcement.example.1
time_limit = 300                        # Only used by this script; may not be used by lose judgement script.

[event.12]
sp = 1
mp = 0
condition = chained_reinforcement
reinforcement_previous = reinforcement.example.1
action = reinforcement.example.2
time_limit = 800                        # Condition example.2 will judge whether example.1 is done
                                        # and whether it is timeout.
action = set_player_win
player_id = 1                           # Used by set_player_win script.

[event.13]
sp = 1
mp = 0
condition = escort_target_destroyed
action = set_player_lose
player_id = 1

[evnet.14]
sp = 1
mp = 0
condition = escort_finish
action = set_player_win
player_id = 1
escort_finish_x_min = 1
escort_finish_x_max = 100
escort_finish_y_min = 1
escort_finish_y_max = 100

[event.1]               # When headquarter is destroyed, player loses.
sp = 0
mp = 1
condition = headquarter_destroyed
action = set_player_lose
player_id = 1
target_id = 1

[event.2]               # When player 1 failed, player fail.
sp = 0
mp = 1
condition = headquarter_destroyed
action = set_player_lose
player_id = 2
target_id = 1

[event.2]               # When player 1 's headquarter is destroyed, enemy (player 3) wins.
sp = 0
mp = 1
condition = headquarter_destroyed
action = set_player_win
player_id = 3
target_id = 1
